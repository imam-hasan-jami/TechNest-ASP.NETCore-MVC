@model StoreSearchModel             // This is a custom class(model) that I created to store the search parameters
@{
}

<h2 class="pb-4 text-center">Products</h2>

@* Added reset button to reset the filters *@
<form class="row g-3 mb-3">
    <div class="col-lg-2 col-md-4">
        <select class="form-select" id="brandSelect" name="brand" asp-for="Brand" onchange="this.form.submit(); checkResetVisibility();">
            <option value="">All Brands</option>
            <option value="Apple">Apple</option>
            <option value="Samsung">Samsung</option>
            <option value="Nokia">Nokia</option>
            <option value="HP">HP</option>
        </select>
    </div>
    <div class="col-lg-2 col-md-4">
        <select class="form-select" id="categorySelect" name="category" asp-for="Category" onchange="this.form.submit(); checkResetVisibility();">
            <option value="">All Categories</option>
            <option value="Phones">Phones</option>
            <option value="Computers">Computers</option>
            <option value="Accessories">Accessories</option>
            <option value="Printers">Printers</option>
            <option value="Cameras">Cameras</option>
            <option value="Other">Other</option>
        </select>
    </div>
    <div class="col-lg-2 col-md-4">
        <select class="form-select" id="sortSelect" name="sort" asp-for="Sort" onchange="this.form.submit(); checkResetVisibility();">
            <option value="newest">Order By Newest</option>
            <option value="price_asc">Price: Low to High</option>
            <option value="price_desc">Price: High to Low</option>
        </select>
    </div>
    <div class="col-12" id="resetButtons" style="display: none;">
        <button type="button" class="btn btn-secondary" onclick="resetFilters()">Reset Filters</button>
    </div>

    @* <div class="col-lg-6 col-md-12 d-flex">
        <input class="form-control me-2" name="search" asp-for="Search" placeholder="Search by Name">
        <button class="btn btn-outline-success" type="submit">Search</button>
    </div> *@

    @* Added clear button to clear the search box *@
    <div class="col-lg-6 col-md-12 d-flex">
        <input class="form-control me-2" id="searchBox" name="search" asp-for="Search" placeholder="Search by Name" oninput="toggleClearButton()">
        <button class="btn btn-outline-danger me-2" type="button" id="clearButton" onclick="clearSearchBoxAndSubmit()" style="display: none;">Clear</button>
        <button class="btn btn-outline-success" type="submit">Search</button>
    </div>

    <script>
        // Function to check if any option other than default is selected
        function checkResetVisibility() {
            const brandSelect = document.getElementById('brandSelect');
            const categorySelect = document.getElementById('categorySelect');
            const sortSelect = document.getElementById('sortSelect');
            const resetButtons = document.getElementById('resetButtons');

            if (brandSelect.value !== '' || categorySelect.value !== '' || sortSelect.value !== 'newest') {
                resetButtons.style.display = 'block';
            } else {
                resetButtons.style.display = 'none';
            }
        }

        // Function to reset the filters
        function resetFilters() {
            document.getElementById('brandSelect').value = '';
            document.getElementById('categorySelect').value = '';
            document.getElementById('sortSelect').value = 'newest';
            document.forms[0].submit();
        }

        // Check visibility when the page loads
        document.addEventListener('DOMContentLoaded', checkResetVisibility);

        // Function to toggle the clear button
        function toggleClearButton() {
            var searchBox = document.getElementById('searchBox');
            var clearButton = document.getElementById('clearButton');
            if (searchBox.value.length > 0) {
                clearButton.style.display = 'inline-block';
            } else {
                clearButton.style.display = 'none';
            }
        }

        // Function to clear the search box and submit the form 
        function clearSearchBoxAndSubmit() {
            var searchBox = document.getElementById('searchBox');
            searchBox.value = '';
            toggleClearButton();
            searchBox.form.submit();
        }

        // Call toggleClearButton on page load
        window.onload = function() {
            toggleClearButton();
        };
    </script>
</form>

<div class="row mb-5 g-3">
    @foreach (var product in ViewBag.Products)
    {
        <div class="col-lg-3 col-md-6">
            <div class="rounded border shadow p-3 text-center h-100">
                <img src="/Product-Images/@product.ImageFileName" class="img-fluid" alt="..." style="height: 180px; object-fit: contain" />
                <hr />
                <h5 class="py-2">@product.Name</h5>
                <p>
                    Brand: @product.Brand, Category: @product.Category
                </p>
                <h4 class="mb-3">@(product.Price)$</h4>
                <a class="btn btn-primary btn-sm mb-2" asp-controller="Store" asp-action="Details" asp-route-id="@product.Id" role="button">Details</a>
                <button type="button" class="btn btn-warning btn-sm mb-2">
                    Add to Cart <i class="bi bi-cart4"></i>
                </button>
            </div>
        </div>
    }
</div>

<nav>
    <ul class="pagination">
        @for (int i = 1; i <= ViewBag.TotalPages; i++)
        {
            string active = "";
            if (i == ViewBag.PageIndex)
            {
                active = "active";
            }
            <li class="page-item @active"><a class="page-link" asp-route-pageIndex="@i" asp-route-search="@Model.Search" asp-route-brand="@Model.Brand" asp-route-category="@Model.Category" asp-route-sort="@Model.Sort">@i</a></li>
        }
    </ul>
</nav>